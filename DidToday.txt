Date & Time in Frontend/Backend
https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/date

jetzt client authentifizierung

aus typescript typing kotlinTypes generieren? Beispiel? react-minimal-pie-chart händisch/dukat
https://github.com/Kotlin/dukat

 - DONE getrennte felder beim datum (html inputform dateType?)
 - startseite -> loginscreen dann erst Umfragen, alles dahinter, ablaufen?, redirect?
 - css \o/
 - unittest, backend und frontend, Beispiel der funktionen
 - technisches review  evtl. in zwei woche

________________________________________________________________________

DONE 2. chartslicedata nur im frontend
DONE 3. nur answer objekte + expirationtime senden (eigenes object erstellen? nur aus Strings?)
DONE 1. editierung
DONE 4. api in common


PropTypes (strapi-examples auth?)
Auth (strapi-examples)
ErrorHandling with Error Boundaries (async errors)


------------------------------------------------------------------------

DONE - commit
DONE (gibt kein update außer auf die kotlin 1.4 previews)- update von ktor
DONE --continuous -> hotreload. Breaks if there is an error (something red)
DONE - styling (diese woche (29.6)), fehler außenvor default soll funktionieren, bootstrap?, bei Fragen fragen,
    flexbox layout
    TOO MUCH - bootstrap
DONE - clean up
DONE - datum abfrage in common verschieben, PoC
- tests je Main
- react redux

Android App?
---------------------------------
ui
DONE - jvm
common
DONE - db initilisierung/löschung
tests, das es geht, wies aussieht, muss nicht sinnvoll sein

fr. review

nächste woche nacharbeiten, fr. nachbesprechen

danach Bericht,

-- display servuy -> direct display all created surveys


----- Readme -----

check README for further info, fallstricke, für nächsten developer erklärungen,
Versionierung in buildSrc ins README, gitlab issues?,

basierend auf anderen Readmess von projekten

val endSurvey = object {
    fun endSurvey(){

    }
 }



--------------

refactoring
Readme

dann mit wolfgang
evtl. tests falls zeit, falls nicht weiter mit wolfgang konverieren


------------------------------------

readme
ALLES reinschreiben!

bericht

danch nochmal was gut?, schlecht?

doku mit wolfgang letzte drei Tage

DANN

tests mit Jest?
DOMjs

ODER

projekt erweitern so dass man mit android app direkt weiter machen könnte, emulator startet
intelliJ Plugins for android? task in gradle für emulator, der dann die app startet

leere App, keine Logik

ODER

UI aufhübschen


________________________

README fertig

DANN

alles was sinnvoll ist auf den master mergen, git repo exportieren?
alles auschecken
github projekt anegen -> komplett leer
lokales repo -> add remote auf github
mit git push und allen branches oder upstream default?
auf eigenes github
dann clonen

DANN

commonCode
welche tasks im offitiellen repo?
aourcesets definieren wie android